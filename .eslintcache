[{"X:\\Documents\\Self-study\\explotech\\src\\components\\App.tsx":"1","X:\\Documents\\Self-study\\explotech\\src\\components\\Room\\index.tsx":"2","X:\\Documents\\Self-study\\explotech\\src\\components\\Login\\index.tsx":"3","X:\\Documents\\Self-study\\explotech\\src\\index.tsx":"4","X:\\Documents\\Self-study\\explotech\\src\\reportWebVitals.ts":"5"},{"size":423,"mtime":1607897632428,"results":"6","hashOfConfig":"7"},{"size":3416,"mtime":1607909371650,"results":"8","hashOfConfig":"9"},{"size":3410,"mtime":1607895510157,"results":"10","hashOfConfig":"7"},{"size":512,"mtime":1607878897341,"results":"11","hashOfConfig":"9"},{"size":425,"mtime":1607876261329,"results":"12","hashOfConfig":"7"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t9h5vp",{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vw5vol",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"X:\\Documents\\Self-study\\explotech\\src\\components\\App.tsx",[],"X:\\Documents\\Self-study\\explotech\\src\\components\\Room\\index.tsx",["24","25","26","27","28","29"],"X:\\Documents\\Self-study\\explotech\\src\\components\\Login\\index.tsx",[],"X:\\Documents\\Self-study\\explotech\\src\\index.tsx",[],"X:\\Documents\\Self-study\\explotech\\src\\reportWebVitals.ts",["30"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",{"ruleId":"31","severity":1,"message":"32","line":18,"column":18,"nodeType":"33","messageId":"34","endLine":18,"endColumn":21,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":36,"column":5,"nodeType":"38","messageId":"39","endLine":36,"endColumn":16},{"ruleId":"36","severity":1,"message":"37","line":51,"column":7,"nodeType":"38","messageId":"39","endLine":51,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":56,"column":7,"nodeType":"38","messageId":"39","endLine":56,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":67,"column":24,"nodeType":"38","messageId":"39","endLine":67,"endColumn":35},{"ruleId":"36","severity":1,"message":"37","line":73,"column":5,"nodeType":"38","messageId":"39","endLine":73,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":3,"column":25,"nodeType":"42","messageId":"43","endLine":3,"endColumn":57},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["44","45"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",{"messageId":"46","fix":"47","desc":"48"},{"messageId":"49","fix":"50","desc":"51"},"suggestUnknown",{"range":"52","text":"53"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"52","text":"54"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[412,415],"unknown","never"]