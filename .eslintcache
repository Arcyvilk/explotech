[{"X:\\Documents\\Self-study\\explotech\\src\\components\\App.tsx":"1","X:\\Documents\\Self-study\\explotech\\src\\components\\Room\\index.tsx":"2","X:\\Documents\\Self-study\\explotech\\src\\components\\Login\\index.tsx":"3","X:\\Documents\\Self-study\\explotech\\src\\index.tsx":"4","X:\\Documents\\Self-study\\explotech\\src\\components\\Login\\style.ts":"5","X:\\Documents\\Self-study\\explotech\\src\\shared\\store\\reducers\\users.ts":"6","X:\\Documents\\Self-study\\explotech\\src\\components\\Room\\style.ts":"7","X:\\Documents\\Self-study\\explotech\\src\\components\\NotFound\\style.ts":"8","X:\\Documents\\Self-study\\explotech\\src\\shared\\store\\reducers\\index.ts":"9","X:\\Documents\\Self-study\\explotech\\src\\components\\NotFound\\index.tsx":"10"},{"size":423,"mtime":1607897632428,"results":"11","hashOfConfig":"12"},{"size":3138,"mtime":1607911658073,"results":"13","hashOfConfig":"14"},{"size":2275,"mtime":1607911674889,"results":"15","hashOfConfig":"14"},{"size":358,"mtime":1607911188911,"results":"16","hashOfConfig":"14"},{"size":1425,"mtime":1607910860259,"results":"17","hashOfConfig":"14"},{"size":407,"mtime":1607911312865,"results":"18","hashOfConfig":"14"},{"size":222,"mtime":1607910866400,"results":"19","hashOfConfig":"14"},{"size":642,"mtime":1607912818203,"results":"20","hashOfConfig":"14"},{"size":140,"mtime":1607910623387,"results":"21","hashOfConfig":"14"},{"size":220,"mtime":1607913030721,"results":"22","hashOfConfig":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t9h5vp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mbn0jd",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"X:\\Documents\\Self-study\\explotech\\src\\components\\App.tsx",[],"X:\\Documents\\Self-study\\explotech\\src\\components\\Room\\index.tsx",["44","45","46","47","48"],"X:\\Documents\\Self-study\\explotech\\src\\components\\Login\\index.tsx",[],"X:\\Documents\\Self-study\\explotech\\src\\index.tsx",[],"X:\\Documents\\Self-study\\explotech\\src\\components\\Login\\style.ts",[],"X:\\Documents\\Self-study\\explotech\\src\\shared\\store\\reducers\\users.ts",["49","50"],"import { createSlice } from '@reduxjs/toolkit';\n\ntype State = {\n  user?: string;\n};\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: {} as State,\n  reducers: {\n    userLogin(state: State, action: { type: string; payload: any }) {\n      console.log(action);\n      state.user = action.payload;\n    },\n  },\n});\n\nexport const { userLogin } = userSlice.actions;\nexport default userSlice.reducer;\n","X:\\Documents\\Self-study\\explotech\\src\\components\\Room\\style.ts",[],"X:\\Documents\\Self-study\\explotech\\src\\components\\NotFound\\style.ts",[],"X:\\Documents\\Self-study\\explotech\\src\\shared\\store\\reducers\\index.ts",[],"X:\\Documents\\Self-study\\explotech\\src\\components\\NotFound\\index.tsx",[],{"ruleId":"51","severity":1,"message":"52","line":15,"column":5,"nodeType":"53","messageId":"54","endLine":15,"endColumn":16},{"ruleId":"51","severity":1,"message":"52","line":30,"column":7,"nodeType":"53","messageId":"54","endLine":30,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":35,"column":7,"nodeType":"53","messageId":"54","endLine":35,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":46,"column":24,"nodeType":"53","messageId":"54","endLine":46,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":52,"column":5,"nodeType":"53","messageId":"54","endLine":52,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":10,"column":62,"nodeType":"57","messageId":"58","endLine":10,"endColumn":65,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"52","line":11,"column":7,"nodeType":"53","messageId":"54","endLine":11,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["60","61"],{"messageId":"62","fix":"63","desc":"64"},{"messageId":"65","fix":"66","desc":"67"},"suggestUnknown",{"range":"68","text":"69"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"68","text":"70"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[237,240],"unknown","never"]